angular.module("kitchenFriend",["ui.router"]).config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("Login",{url:"/login",templateUrl:"html/views/login.html",controller:"loginCtrl"}).state("Home",{url:"/home",templateUrl:"html/views/userHome.html",controller:"userHomeCtrl"}).state("Recipes",{url:"/recipes",templateUrl:"html/views/userRecipes.html",controller:"userRecipesCtrl"}).state("NewRecipe",{url:"/newRecipe",templateUrl:"html/views/newRecipe.html",controller:"newRecipeCtrl"}).state("UserAccount",{url:"/userAccount",templateUrl:"html/views/userAccount.html",controller:"userAccountCtrl"}).state("BrowseRecipes",{url:"/browse",templateUrl:"html/views/browseRecipes.html",controller:"browseRecipesCtrl"}).state("Recipe",{url:"/recipe/:recipeId",templateUrl:"html/views/recipe.html",controller:"recipeCtrl"}).state("RecipeEdit",{url:"/editRecipe/:recipeId",templateUrl:"html/views/recipeEdit.html",controller:"recipeEditCtrl"}).state("RecipeShare",{url:"/shareRecipe/:recipeId",templateUrl:"html/views/recipeShare.html",controller:"recipeShareCtrl"}).state("RecipePublic",{url:"/publicRecipe/:recipeId",templateUrl:"html/views/recipePublic.html",controller:"recipePublicCtrl"}).state("Group",{url:"/group",templateUrl:"html/views/group.html",controller:["$state","$scope","groupService","authService",function(e,t,r,n){var i;"/group"===e.current.url&&e.go("Group.Dashboard"),t.currentTab=e.current.url,console.log("CURRENT TAB: ",t.currentTab),n.getAuth().then(function(e){i=e.data,console.log("user loaded")}),r.getMyGroups().then(function(e){t.groups=e.groups}),t.checkAdmin=function(e){if(!i)return!1;for(var t=0;t<e.administrators.length;t++)if(e.administrators[t]===i._id)return!0;return!1}}]}).state("Group.Dashboard",{url:"/dashboard",templateUrl:"html/views/groupDashboard.html",controller:"groupDashboardCtrl"}).state("Group.Create",{url:"/create/:groupId",templateUrl:"html/views/groupCreate.html",controller:"groupCreateCtrl"}).state("Group.Admin",{url:"/admin/:groupId",templateUrl:"html/views/groupAdmin.html",controller:"groupAdminCtrl"}).state("Group.Recipes",{url:"/recipes/:groupId",templateUrl:"html/views/groupRecipes.html",controller:"groupRecipesCtrl"}).state("Group.Members",{url:"/members/:groupId",templateUrl:"html/views/groupMembers.html",controller:"groupMemberCtrl"}).state("Group.Home",{url:"/home/:groupId",templateUrl:"html/views/groupHome.html",controller:"groupHomeCtrl"}),t.otherwise("/login")}]),angular.module("kitchenFriend").controller("browseRecipesCtrl",["$scope","publicRecipeService",function(e,t){t.getPublicRecipes().then(function(t){e.recipes=t})}]),angular.module("kitchenFriend").controller("cookCtrl",["$scope","recipeService",function(e,t){t.getCookedRecipes().then(function(t){e.recipes=t})}]),angular.module("kitchenFriend").controller("groupAdminCtrl",["$scope","$stateParams","groupService",function(e,t,r){r.getGroupById(t.groupId).then(function(t){e.group=t,console.log("got group",t)}),e.addMember=function(t){console.log("ADD",t),r.inviteMember(t,e.group._id).then(function(e){window.alert("Member Invited")})["catch"](function(e){console.error("invite err: ",e),window.alert("error: ",e.data.reason)}),e.toInvite="",e.showMemberInvite=!1},e.makeAdmin=function(t,n){r.makeMemberAdmin(t,e.group._id).then(function(t){var r=e.group.members.splice(n,1);e.group.administrators.push(r)})}}]),angular.module("kitchenFriend").controller("groupCreateCtrl",["$scope","groupService","$state",function(e,t,r){e.create=function(e){t.create(e).then(function(e){r.go("Group.Home",{groupId:e._id})})}}]),angular.module("kitchenFriend").controller("groupDashboardCtrl",["$scope","groupService",function(e,t){t.getMyGroups().then(function(t){console.log("groups: ",t),e.groups=t.groups})}]),angular.module("kitchenFriend").controller("groupHomeCtrl",["$scope","groupService","$stateParams",function(e,t,r){console.log("Gettting group: ",r.groupId),t.getGroupById(r.groupId).then(function(t){e.group=t,console.log("Got group: ",t)})}]),angular.module("kitchenFriend").controller("groupMemberCtrl",["$scope","groupService","$stateParams",function(e,t,r){t.getGroupMembers(r.groupId).then(function(t){console.log("Got Groupies: ",t),e.members=t.members,e.admins=t.administrators})}]),angular.module("kitchenFriend").controller("groupRecipesCtrl",["$scope","groupService","$stateParams",function(e,t,r){t.getGroupById(r.groupId).then(function(t){e.recipes=t.recipes,console.log("Got Recipes:",e.recipes)})}]),angular.module("kitchenFriend").controller("loginCtrl",["$scope","$location","authService",function(e,t,r){e.localLogin=function(e){console.log("Logging in as: ",e),r.localLogin(e).then(function(e){e&&(console.log("redirecting"),t.path("/home"))})["catch"](function(e){console.log("Login Error: ",e)})},e.localSignup=function(e){console.log("Signup up locally with: ",e),r.createLocalUser(e).then(function(e){e&&console.log("Account Created")})["catch"](function(e){console.log("Account not created"),"Username already exists."===e.data&&window.alert("Username in use, please try again.")})}}]),angular.module("kitchenFriend").controller("newRecipeCtrl",["$scope",function(e){}]),angular.module("kitchenFriend").controller("recipeCtrl",["$scope","$stateParams","recipeService",function(e,t,r){e.isLoading=!0,r.getRecipeById(t.recipeId).then(function(t){e.recipe=t,e.isLoading=!1,console.log("GOT RECIPE: ",t)})}]),angular.module("kitchenFriend").controller("recipeEditCtrl",["$scope","$state","$stateParams","recipeService",function(e,t,r,n){r.recipeId?n.getRecipeById(r.recipeId).then(function(t){e.recipe=t}):(console.log("Could not find recipe Id"),t.go("Home")),e.saveChanges=function(){n.updateRecipe(e.recipe).then(function(e){t.go("Recipe",{recipeId:e._id})})}}]),angular.module("kitchenFriend").controller("recipePublicCtrl",["$scope","publicRecipeService","$stateParams",function(e,t,r){t.getPublicRecipeById(r.recipeId).then(function(t){e.recipe=t,e.isLoading=!1,console.log("GOT RECIPE: ",t)})}]),angular.module("kitchenFriend").controller("recipeShareCtrl",["$scope","$state","$stateParams","groupService","recipeService","shareService","publicRecipeService",function(e,t,r,n,i,o,c){i.getRecipeById(r.recipeId).then(function(t){e.recipe=t}),n.getMyGroups().then(function(t){e.groups=t.groups,console.log("Found Groups: ",e.groups)}),e.currentView=0,e.shareRecipePublic=function(){e.termsCheck&&c.shareNewRecipe(e.recipe).then(function(){t.go("BrowseRecipes")})},e.shareRecipeWithUser=function(e){console.log("Shareing",e),e.recipeId=r.recipeId,o.shareUser(e).then(function(){t.go("Home")})["catch"](function(e){console.log("FOUND THE ERROR: ",e),"User does not exist"===e.data.message&&alert("Sorry, that user does not exist.")})},e.shareWithEmail=function(r){r.recipe=e.recipe,o.shareEmail().then(function(){t.go("Home")})},e.shareWithGroup=function(r){console.log("Shareing: ",r),o.shareToGroup(r._id,e.recipe._id).then(function(e){t.go("Home")})}}]),angular.module("kitchenFriend").controller("shoppingListCtrl",["$scope",function(e){e.shoppingList=[]}]),angular.module("kitchenFriend").controller("userAccountCtrl",["$scope",function(e){}]),angular.module("kitchenFriend").controller("userHomeCtrl",["$scope","shareService","groupService",function(e,t,r){t.getUsersMail().then(function(t){e.allMail=t.recipeShares,console.log("mail: ",t.recipeShares)}),e.deleteFunction=function(t){for(var r=0;r<e.allMail.length;r++)e.allMail[r].recipeId._id===t&&e.allMail.splice(r,1)},r.getGroupInvites().then(function(t){e.groupInvites=t,console.log("group invites: ",t)}),e.acceptGroupInvite=function(t,n){r.acceptGroupInvite(t).then(function(t){e.groupInvites.splice(n,1)})},e.rejectGroupInvite=function(t,n){r.rejectGroupInvite(t).then(function(t){e.groupInvites.splice(n,1)})}}]),angular.module("kitchenFriend").controller("userRecipesCtrl",["$scope","recipeService",function(e,t){var r=function(){t.getCurrentUsersRecipes().then(function(t){e.recipes=t.recipes})};r()}]),angular.module("kitchenFriend").directive("myHeader",function(){return{templateUrl:"html/templates/header.html",scope:{forceAuth:"@"},controller:["$scope","authService","$state",function(e,t,r){e.loggedIn=!1,t.getAuth().then(function(t){e.loggedIn=!0,console.log("User logged in: ",t)})["catch"](function(t){e.loggedIn=!1,console.log("No user logged in",e.forceAuth),e.forceAuth&&r.go("Login")}),e.logout=function(){t.logout().then(function(e){r.go("Login")})}}]}}),angular.module("kitchenFriend").directive("loading",function(){return{template:'<p ng-show="isloading">Loading...</p>',scope:{isLoading:"="}}}),angular.module("kitchenFriend").directive("newLinkRecipe",function(){return{templateUrl:"html/templates/newLinkRecipe.html",link:function(e,t,r){e.loading=!1,e.couldNotFindRecipe=!1,e.foundRecipe=!1,e.findRecipe=function(t){e.loading=!0},e.saveRecipe=function(e){console.log("Saving")}}}}),angular.module("kitchenFriend").directive("newUserRecipe",["recipeService","$state",function(e,t){return{templateUrl:"html/templates/newUserRecipe.html",scope:{},link:function(r,n,i){r.newRecipe={ingredients:[],directions:[]},r.addIngredient=function(e){r.newRecipe.ingredients.push(e),r.newIngredient=""},r.removeIngredient=function(e){r.newRecipe.ingredients.splice(e,1)},r.orderIngredient=function(e,t){var n=r.newRecipe.ingredients[e];r.newRecipe.ingredients[e]=r.newRecipe.ingredients[e+t],r.newRecipe.ingredients[e+t]=n},r.addDirection=function(e){r.newRecipe.directions.push(e),r.newDirection=""},r.removeDirection=function(e){r.newRecipe.directions.splice(e,1)},r.orderDirection=function(e,t){var n=r.newRecipe.directions[e];r.newRecipe.directions[e]=r.newRecipe.directions[e+t],r.newRecipe.directions[e+t]=n},r.saveRecipe=function(){o()&&(console.log("Recipe Passed Validation"),e.saveNewRecipe(r.newRecipe).then(function(e){console.log("Recipe Saved"),t.go("Recipes")}))};var o=function(){return r.newRecipe.name?r.newRecipe.description?null===r.newRecipe.prepTime?(console.log("Prep Time Failed"),!1):null===r.newRecipe.cookTime?(console.log("Cook Time Failed"),!1):r.newRecipe.ingredients?r.newRecipe.directions?!0:(console.log("Directions Failed"),!1):(console.log("Ingredients Failed"),!1):(console.log("Description Failed"),!1):(console.log("Name Failed"),!1)}}}}]),angular.module("kitchenFriend").directive("recipeFull",function(){return{templateUrl:"html/templates/recipeFull.html"}}),angular.module("kitchenFriend").directive("recipeInteractions",["recipeService",function(e){return{templateUrl:"html/templates/recipeInteractions.html",scope:{recipeId:"=",layout:"@"},controller:["$scope","$state",function(t,r){t.classStuff={"recipe-interactions-expanded-fixed":"expanded-fixed"===t.layout},t.editRecipe=function(){t.recipeId&&r.go("RecipeEdit",{recipeId:t.recipeId})},t.shareRecipe=function(){t.recipeId&&r.go("RecipeShare",{recipeId:t.recipeId})},t.deleteRecipe=function(){window.confirm("Are you sure you want to delete this recipe?")&&t.recipeId&&e.deleteRecipe(t.recipeId).then(function(e){r.go("Recipes")})},t.printRecipe=function(){alert("Not Finished Yet")}}]}}]),angular.module("kitchenFriend").directive("recipeMail",function(){return{templateUrl:"html/templates/recipeMail.html",scope:{mail:"=",deleteFunction:"&delete"},controller:["$scope","shareService","$state",function(e,t,r){e.message=e.mail,console.log("MESSAGE: ",e.message),e.acceptMail=function(r){t.acceptShare(r).then(function(){console.log("refresh needed: ",r),e.deleteFunction({recipeId:r})})},e.rejectMail=function(r){console.log("REJECTING"),t.rejectShare(r).then(function(t){console.log("refresh Needed from rejecting: ",t),e.deleteFunction({recipeId:r})})}}]}}),angular.module("kitchenFriend").directive("recipePreview",function(){return{templateUrl:"html/templates/recipePreview.html",scope:{recipe:"=",browse:"@"},controller:["$scope","$state",function(e,t){e.openRecipe=function(){console.log("CLICKED VIEW WITH: ",e.browse),e.browse?t.go("RecipePublic",{recipeId:e.recipe._id}):t.go("Recipe",{recipeId:e.recipe._id})}}]}}),angular.module("kitchenFriend").directive("userPreview",function(){return{templateUrl:"html/templates/userPreview.html",scope:{user:"="},controller:["$scope",function(e){e.defaultPic="https://pixabay.com/static/uploads/photo/2013/07/13/12/07/avatar-159236_960_720.png"}]}}),angular.module("kitchenFriend").service("authService",["$http",function(e){this.createLocalUser=function(t){return e({method:"POST",url:"/auth/signup",data:t})},this.localLogin=function(t){return e({method:"POST",url:"/auth/local",data:t})},this.getAuth=function(){return e({method:"GET",url:"/auth/current"})},this.logout=function(){return e({method:"GET",url:"/auth/logout"})}}]),angular.module("kitchenFriend").service("groupService",["$http",function(e){function t(e){return e.data}function r(e){return console.error("Group Service",e),e}this.create=function(n){return e({method:"POST",url:"/api/groups",data:n}).then(t,r)},this.getMyGroups=function(){return e({method:"GET",url:"/api/myGroups"}).then(t,t)},this.getGroupById=function(n){return e({method:"GET",url:"/api/groups/"+n}).then(t,r)},this.getGroupMembers=function(n){return e({method:"GET",url:"/api/groupMembers/"+n}).then(t,r)},this.inviteMember=function(r,n){return e({method:"POST",url:"/api/groupMembers",data:{name:r,group:n}}).then(t)},this.makeMemberAdmin=function(n,i){return e({method:"PUT",url:"/api/groupMembers?memberId="+n+"&groupId="+i}).then(t,r)},this.getGroupInvites=function(){return e({method:"GET",url:"/api/groupInvites"}).then(t,r)},this.acceptGroupInvite=function(t){return e({method:"PUT",url:"/api/groupInvites/accept?groupId="+t})},this.rejectGroupInvite=function(t){return e({method:"PUT",url:"/api/groupInvites/reject?groupId="+t})}}]),angular.module("kitchenFriend").service("publicRecipeService",["$http",function(e){var t=function(e){return e.data};this.getPublicRecipes=function(){return e({method:"GET",url:"/api/publicRecipes"}).then(t)},this.shareNewRecipe=function(r){return e({method:"POST",url:"/api/share/public",data:r}).then(t)},this.getPublicRecipeById=function(r){return e({method:"GET",url:"/api/publicRecipes/"+r}).then(t)}}]),angular.module("kitchenFriend").service("recipeService",["$http",function(e){this.getCurrentUsersRecipes=function(){return e({method:"GET",url:"/api/recipes"}).then(t)},this.saveNewRecipe=function(r){return e({method:"POST",url:"/api/recipes",data:r}).then(t)},this.getRecipeById=function(r){return e({method:"GET",url:"/api/recipe/"+r}).then(t)},this.updateRecipe=function(r){return e({method:"PUT",url:"/api/updateRecipe",data:r}).then(t)},this.deleteRecipe=function(r){return e({method:"DELETE",url:"/api/recipe/"+r}).then(t)};var t=function(e){return e.data}}]),angular.module("kitchenFriend").service("shareService",["$http",function(e){this.shareUser=function(r){return e({method:"POST",url:"/api/share/user",data:r}).then(t)},this.shareEmail=function(r){return e({method:"POST",url:"/api/share/email",data:r}).then(t)},this.getUsersMail=function(){return e({method:"GET",url:"/api/share"}).then(t)},this.acceptShare=function(r){return console.log("Sending Id: ",r),e({method:"PUT",url:"/api/share/accept/"+r}).then(t)},this.rejectShare=function(r){return e({method:"PUT",url:"/api/share/reject/"+r}).then(t)},this.shareToGroup=function(r,n){var i="?groupId="+r+"&recipeId="+n;return e({method:"POST",url:"/api/groupRecipes"+i}).then(t)};var t=function(e){return e.data}}]),angular.module("kitchenFriend").service("shoppingListService",["$http",function(e){var t=function(e){return e.data},r=function(e){return console.error(e),null};this.getUsersList=function(n){var i="/api/shoppingList";return n&&(i+="?userId="+n),e({method:"GET",url:i}).then(t)["catch"](r)},this.addItemToList=function(n){return e({method:"POST",url:"/api/shoppingList",data:n}).then(t)["catch"](r)},this.removeItemFromList=function(n){return e({method:"DELETE",url:"/api/shoppingList",data:n}).then(t)["catch"](r)}}]);